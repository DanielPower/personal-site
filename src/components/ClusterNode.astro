---
interface ClusterNode {
  name: string;
  status: string;
  kubeletVersion: string;
  osImage: string;
  totalMemoryGiB: string;
  usedMemoryGiB: string;
  memoryUsagePercent: number;
  cpuUsagePercent: number;
  uptime: string;
  uptimeSeconds: number;
}

const { node } = Astro.props;
---

<div class="node">
  <div class="node-info">
    <h3 class="node-name">
      <div class="flex">
        <div>{node.name}</div>
        <div class={`status ${node.status.toLowerCase()}`}>{node.status}</div>
      </div>
    </h3>
    <div class="node-detail">
      <span class="label">Kubelet:</span>
      {node.kubeletVersion}
    </div>
    <div class="node-detail">
      <span class="label">OS:</span>
      {node.osImage}
    </div>
    <div class="node-detail">
      <span class="label">Uptime:</span>
      {node.uptime}
    </div>
    <div class="memory-section">
      <div class="node-detail">
        <span class="label">Memory:</span>
        {node.usedMemoryGiB} / {node.totalMemoryGiB} GiB ({node.memoryUsagePercent}%)
      </div>
      <div class="progress-bar">
        <div 
          class="progress-bar-fill memory-fill"
          style={`width: ${node.memoryUsagePercent}%;`}
        ></div>
      </div>
    </div>
    <div class="cpu-section">
      <div class="node-detail">
        <span class="label">CPU:</span>
        {node.cpuUsagePercent.toFixed(1)}%
      </div>
      <div class="progress-bar">
        <div 
          class={`progress-bar-fill cpu-fill ${node.cpuUsagePercent > 80 ? 'high' : node.cpuUsagePercent > 60 ? 'medium' : 'low'}`}
          style={`width: ${node.cpuUsagePercent}%;`}
        ></div>
      </div>
    </div>
  </div>
</div>

<style>
  .node {
    padding: 0.5rem;
    background-color: var(--color-bg2);
    border-radius: 8px;
  }
  .flex {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .node-name {
    font-size: 1.2rem;
  }

  .node-info {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .node-detail {
    font-size: 0.9rem;
  }

  .label {
    font-weight: bold;
  }

  .memory-section,
  .cpu-section {
    margin-top: 0.5rem;
  }
  
  .progress-bar {
    height: 8px;
    background-color: var(--color-gray);
    border-radius: 4px;
    overflow: hidden;
    margin-top: 0.25rem;
    width: 100%;
  }
  
  .progress-bar-fill {
    height: 100%;
    border-radius: 4px;
    transition: width 0.3s ease;
  }
  
  .memory-fill {
    background-color: var(--color-blue);
  }
  
  .cpu-fill {
    background-color: var(--color-green);
  }
  
  .cpu-fill.medium {
    background-color: var(--color-yellow);
  }
  
  .cpu-fill.high {
    background-color: var(--color-red);
  }

  .status {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.85rem;
    color: var(--color-dark);
  }

  .status.ready {
    background-color: var(--color-bright-green);
  }

  .status.notready {
    background-color: var(--color-bright-red);
  }
</style>
