---
import Icon from "astro-icon";
import Project from "../components/Project.astro";
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <div class="projects">
    <Project
      title="Balacord (2024-2025)"
      image="balacord.png"
      links={[
        {
          name: "Repository",
          url: "https://github.com/DanielPower/balacord",
          icon: "mdi:github",
        },
        {
          name: "Invite to your server",
          url: "https://discord.com/oauth2/authorize?client_id=1224531149372657767&permissions=2147484672&scope=bot",
          icon: "mdi:discord",
        },
        {
          name: "Discord Community",
          url: "https://discord.gg/SxcZkqF6",
          icon: "mdi:discord",
        },
      ]}
    >
      <p>
        A Discord bot for displaying information about Balatro Jokers.
      </p>
      <p>
        Balacord supports all languages included in Balatro, allowing users to
        view joker information in their preferred language.
      </p>
    </Project>

    <Project
      title="TwatBot (2023-2025)"
      links={[
        {
          name: "Repository",
          url: "https://github.com/danielpower/twat-bot",
          icon: "mdi:github",
        },
        {
          name: "Invite to your server",
          url: "https://discord.com/api/oauth2/authorize?client_id=1154539158564515890&permissions=67584&scope=bot",
          icon: "mdi:discord",
        },
      ]}
    >
      <p>
        A Discord bot that listens for Twitter/X links and replies with a Nitter
        link. Nitter is an alternative frontend for Twitter which does not
        require a Twitter account to view.
      </p>
      <p>
        It is written in Rust using <a
          href="https://github.com/serenity-rs/serenity">Serenity</a
        > to interact with Discord.
      </p>
    </Project>

    <Project
      title="Eclipse (2023)"
      image="eclipse.png"
      links={[
        {
          name: "Repository",
          url: "https://github.com/DanielPower/eclipse",
          icon: "mdi:github",
        },
      ]}
    >
      <p>
        A tool for visualizing GLSL shaders. It is written in Lua using the
        Love2D framework. It is designed to be compatible with shaders from <a
          href="https://www.shadertoy.com">ShaderToy</a
        >
      </p>
    </Project>

    <Project
      title="Orbs in Space - Love2D Game Jam entry (2023)"
      image="orbs.png"
      links={[
        {
          name: "Repository",
          url: "https://github.com/DanielPower/Love2DJam2023",
          icon: "mdi:github",
        },
        {
          name: "Game Jam Entry",
          url: "https://itch.io/jam/love2d-jam-2023/rate/1946249",
          icon: "mdi:gamepad-variant",
        },
      ]}
    >
      <p>
        A game made for the <a href="https://itch.io/jam/love2d-jam-2023"
          >Love2D Jam 2023.</a
        >
        The theme is "Connection".
      </p>
      <p>
        You are an orb whose only method of movement is to emit mass in the
        opposite direction. In order to recover mass you must absorb smaller
        orbs. The goal is to absorb enough mass to become the largest orb in the
        level.
      </p>
      <p>
        Orbs in Space is written in Lua using the Love2D framework. It uses an
        ECS architecture.
      </p>
    </Project>

    <Project
      title="Advent of Code Solutions (2019-2024)"
      links={[
        {
          name: "Repository",
          url: "https://github.com/DanielPower/AdventOfCode",
          icon: "mdi:github",
        },
      ]}
    >
      <p>
        Advent of Code is a yearly programming challenge. Each day in December,
        a new Christmas themed puzzle is released. I've been participating since
        2020.
      </p>
      <p>
        I like to use Advent of Code as an opportunity to practice a new
        language or programming paradigm. In 2019 I wrote my solutions in Rust.
        In 2021 and 2022 I used it as an opportunity to learn pure functional
        programming in Haskell.
      </p>
    </Project>

    <Project
      title="osu! Rapid Host (2022)"
      links={[
        {
          name: "Repository",
          url: "https://github.com/DanielPower/osu-rapid-host/blob/master/package.json",
          icon: "mdi:github",
        },
      ]}
    >
      <p>
        A bot that manages osu! multiplayer lobbies. It automatically chooses
        maps based on the provided filters, and starts the game when all players
        are ready.
      </p>
      <p>
        It includes a tool to scrape data for all ranked maps from the osu! API
        and store it in a sqlite database. This allows the bot to quickly find
        maps that match the provided filters.
      </p>
      <p>
        The bot is written in Typescript, and uses bancho.js to communicate with
        the osu! API.
      </p>
    </Project>

    <Project
      title="Opine (2022)"
      links={[
        {
          name: "Repository",
          url: "https://github.com/DanielPower/opine",
          icon: "mdi:github",
        },
      ]}
    >
      <p>
        A global state management library for React. It is inspired by <a
          href="https://github.com/pmndrs/zustand">zustand</a
        >, but with the goal of providing an intuitive API around a strictly
        sliced store structure which is more suitable to large projects.
      </p>
      <p>
        Zustand allows for a sliced store structure, but it does not prevent
        actions from modifying state outside of their slice. Opine enforces a
        strict structure where each slice contains mutations that can only
        affect that slice. Actions that should affect multiple slices are
        performed using composition. This makes it easier to reason about the
        flow of data through the store.
      </p>
      <p>
        Opine is written in Typescript. It uses the modern useExternalSyncStore
        hook to inform React of state changes. It has built-in support for
        Redux's dev tools.
      </p>
      <p>
        Opine is currently a work in progress, and is not yet ready for use.
      </p>
    </Project>

    <Project
      title="Keeb Pro (2020)"
      image="keeb-pro.png"
      links={[
        {
          name: "Repository",
          url: "https://github.com/danielpower/keeb-pro",
          icon: "mdi:github",
        },
        {
          name: "App",
          url: "https://keeb.danielpower.ca",
          icon: "mdi:globe",
        },
      ]}
    >
      <p>
        A typing test built with svelte. It prompts the user to type a random
        selection of common English words, and displays the user's typing speed
        in words per minute.
      </p>
    </Project>

    <Project
      title="Xorg Autopulse (2018)"
      links={[
        {
          name: "Repository",
          url: "https://gitlab.com/DanielPower/autopulse",
          icon: "mdi:gitlab",
        },
      ]}
    >
      <p>
        A linux utility which automatically changes the audio output device for
        a given application based on which display its window is on. This is
        useful if you have a TV connected to your computer, and want to
        automatically switch the audio output to the TV when you drag a video
        player to it.
      </p>
      <p>
        Since most Linux distributions now ship Wayland instead of Xorg, and
        Pipewire instead of Pulseaudio, this tool will no longer work on modern
        systems.
      </p>
    </Project>

    <Project
      title="Motion (2017)"
      image="motion.jpg"
      links={[
        {
          name: "Repository",
          url: "https://gitlab.com/DanielPower/motion",
          icon: "mdi:gitlab",
        },
      ]}
    >
      <p>
        Motion is an animation library for the Love2D game framework. It
        includes a companion GUI tool for composing animations from
        spritesheets. Motion allows callbacks to be registered for animation
        events, such as the end of a loop.
      </p>
    </Project>
  </div>
</Layout>

<style>
  .projects {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
</style>
