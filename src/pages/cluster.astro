---
import Layout from "../layouts/Layout.astro";
import ClusterNode from "../components/ClusterNode.astro";
import { NODE_NAME } from "astro:env/server";
import { fetchClusterData, type ClusterNodeData } from "../utils/prometheus";
export const prerender = false;

let clusterNodes: ClusterNodeData[] = [];
let error: string | null = null;

try {
  if (import.meta.env.SSR) {
    const result = await fetchClusterData();
    clusterNodes = result.nodes;
    error = result.error;
  }
} catch (e) {
  console.error("Error fetching cluster data:", e);
  error = e instanceof Error ? e.message : "Unknown error";
}
---

<Layout>
  <p>
    This page is being served by <span class="node-name">{NODE_NAME}</span>
    in my homelab Kubernetes cluster.
  </p>

  <p>If you refresh, you might get a different node! ðŸ”„</p>

  {error && <div class="error">{error}</div>}
  
  {!error && (
    <div>
      {clusterNodes.length > 0 ? (
        <div class="cluster-nodes">
          {clusterNodes.map((node) => (
            <ClusterNode node={node} />
          ))}
        </div>
      ) : (
        <p>
          No cluster nodes found. This could be because you're viewing a
          statically generated page or the Prometheus API is not accessible.
        </p>
      )}

      <p class="data-source">
        <small>
          Data sourced from Prometheus. Last updated: {new Date().toLocaleString()}
        </small>
      </p>
    </div>
  )}
</Layout>

<style>
  .node-name {
    font-weight: bold;
  }

  .cluster-nodes {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1rem;
    margin: 1rem 0;
  }

  .error {
    color: var(--color-dark);
    background-color: var(--color-bright-red);
    padding: 0.75rem;
    border-radius: 4px;
    margin: 1rem 0;
  }

  .data-source {
    color: var(--color-gray);
    margin-top: 1rem;
  }
</style>
